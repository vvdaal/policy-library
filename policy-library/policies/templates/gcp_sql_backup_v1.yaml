# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: templates.gatekeeper.sh/v1alpha1
kind: ConstraintTemplate
metadata:
  name: gcp-sql-backup-v1
spec:
  crd:
    spec:
      names:
        kind: GCPSQLBackupConstraintV1
      validation:
        openAPIV3Schema:
          properties: {}
  targets:
    validation.gcp.forsetisecurity.org:
      rego: "#\n# Copyright 2019 Google LLC \n#\n# Licensed under the Apache License,
        Version 2.0 (the \"License\");\n# you may not use this file except in compliance
        with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#
        Unless required by applicable law or agreed to in writing, software\n# distributed
        under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES
        OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for
        the specific language governing permissions and\n# limitations under the License.\n#\n\npackage
        templates.gcp.GCPSQLBackupConstraintV1\n\nimport data.validator.gcp.lib as
        lib\n\n# A violation is generated only when the rule body evaluates to true.\ndeny[{\n\t\"msg\":
        message,\n\t\"details\": metadata,\n}] {\n\t# by default any hour accepted\n\tspec
        := lib.get_default(input.constraint, \"spec\", \"\")\n\tparameters := lib.get_default(spec,
        \"parameters\", \"\")\n\texempt_list := lib.get_default(parameters, \"exemptions\",
        [])\n\n\tasset := input.asset\n\tasset.asset_type == \"sqladmin.googleapis.com/Instance\"\n\n\t#
        Check if resource is in exempt list\n\tmatches := {asset.name} & cast_set(exempt_list)\n\tcount(matches)
        == 0\n\n\t# get instance settings\n\tsettings := lib.get_default(asset.resource.data,
        \"settings\", {})\n\tinstance_backupConfiguration := lib.get_default(settings,
        \"backupConfiguration\", {})\n\tinstance_backupConfiguration_enabled := lib.get_default(instance_backupConfiguration,
        \"enabled\", \"\")\n\n\t# check compliance\n\tinstance_backupConfiguration_enabled
        != true\n\n\tmessage := sprintf(\"%v backup not enabled'\", [asset.name])\n\tmetadata
        := {\"resource\": asset.name}\n}\n#ENDINLINE\n"
